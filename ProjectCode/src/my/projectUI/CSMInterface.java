
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.projectUI;

import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.parser.PdfTextExtractor;
import java.awt.AlphaComposite;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.Cipher;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.poi.hwpf.HWPFDocument;
import org.apache.poi.hwpf.extractor.WordExtractor;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import sun.misc.BASE64Decoder;
import sun.misc.BASE64Encoder;

/**
 *
 * @author sayed shazeb
 */
public class CSMInterface extends javax.swing.JFrame {

    /**
     * Creates new form CSMInterface
     */
    private String fullPath;
    static Cipher cipher;
    String ext;
    private static final String ALGO = "AES";
    String k = "1a25s8fe5dsg65ad";
    byte[] enc= null;
   String filename;
    Image img;
    File fimage;
    String name;
    BufferedImage bf1;
    BufferedImage bf;
    File destImageFile;
    File f1=null,f2=null;
    String path="";    
  
    

    public CSMInterface() {
   
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jButton24 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Lbl_img1_wm = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Lbl_img2_wm = new javax.swing.JLabel();
        jButton15 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        Lbl_img3_wm = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        lab = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1366, 768));

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(0));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my/projectUI/Untitled-1.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1446, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(0));

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Cryptography");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(60, 127, 177));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Browse");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setBackground(new java.awt.Color(60, 127, 177));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Decrypt");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(60, 127, 177));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Save");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(60, 127, 177));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Encrypt");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton12.setBackground(new java.awt.Color(60, 127, 177));
        jButton12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton12.setForeground(new java.awt.Color(255, 255, 255));
        jButton12.setText("Clear");
        jButton12.setEnabled(false);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox1))
                        .addGap(0, 166, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton4)
                        .addGap(36, 36, 36)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jCheckBox1)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(jButton4)
                    .addComponent(jButton12))
                .addGap(40, 40, 40))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.LINE_START);

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        jPanel3.setPreferredSize(new java.awt.Dimension(455, 426));

        jCheckBox3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox3.setText("Watermarking");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jButton24.setBackground(new java.awt.Color(60, 127, 177));
        jButton24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton24.setForeground(new java.awt.Color(255, 255, 255));
        jButton24.setText("watermark");
        jButton24.setEnabled(false);
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jButton13.setBackground(new java.awt.Color(60, 127, 177));
        jButton13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton13.setForeground(new java.awt.Color(255, 255, 255));
        jButton13.setText("Save");
        jButton13.setEnabled(false);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton11.setBackground(new java.awt.Color(60, 127, 177));
        jButton11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setText("Browse");
        jButton11.setEnabled(false);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(60, 127, 177));
        jButton10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("Browse");
        jButton10.setEnabled(false);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(Lbl_img1_wm);

        jScrollPane4.setViewportView(Lbl_img2_wm);

        jButton15.setBackground(new java.awt.Color(60, 127, 177));
        jButton15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton15.setForeground(new java.awt.Color(255, 255, 255));
        jButton15.setText("clear");
        jButton15.setEnabled(false);
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        Lbl_img3_wm.setBackground(new java.awt.Color(204, 204, 255));
        Lbl_img3_wm.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane6.setViewportView(Lbl_img3_wm);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(jCheckBox3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jButton24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton15)
                .addGap(67, 67, 67)
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jCheckBox3)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton13)
                        .addComponent(jButton15))
                    .addComponent(jButton24))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.LINE_END);

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(0));

        jCheckBox2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox2.setText("Steganography");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(60, 127, 177));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Import image");
        jButton5.setEnabled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(60, 127, 177));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Browse");
        jButton6.setEnabled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jButton7.setBackground(new java.awt.Color(60, 127, 177));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Decrypt");
        jButton7.setEnabled(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(60, 127, 177));
        jButton9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Encrypt");
        jButton9.setEnabled(false);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lab, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lab, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
        );

        jButton8.setBackground(new java.awt.Color(60, 127, 177));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Save");
        jButton8.setEnabled(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton14.setBackground(new java.awt.Color(60, 127, 177));
        jButton14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton14.setForeground(new java.awt.Color(255, 255, 255));
        jButton14.setText("Clear");
        jButton14.setEnabled(false);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox2)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jButton9)
                                .addGap(46, 46, 46)
                                .addComponent(jButton14)
                                .addGap(57, 57, 57)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(jButton7)))))
                .addGap(75, 75, 75))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jCheckBox2)
                .addGap(14, 14, 14)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButton14))
                .addGap(38, 38, 38))
        );

        getContentPane().add(jPanel4, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed

        // TODO add your handling code here:
        if(jCheckBox1.isSelected()== true)
        {
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
            jButton3.setEnabled(true);
            jButton4.setEnabled(true);
            jButton12.setEnabled(true);
        }else
        {
             jButton1.setEnabled(false);
            jButton2.setEnabled(false);
            jButton3.setEnabled(false);
            jButton4.setEnabled(false);
            jButton12.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename = f.getAbsolutePath();
        if(filename.lastIndexOf(".") != -1 && filename.lastIndexOf(".") != 0)
        {
            ext = filename.substring(filename.lastIndexOf(".")+1);
            System.out.println("Extension is " +ext);
        }
        else{
            ext = "";
        }

        if(ext.equalsIgnoreCase("txt"))

        {
            try{
                FileReader reader = new FileReader(filename);
                BufferedReader br = new BufferedReader(reader);
                jTextArea1.read( br, null );
                br.close();
                jTextArea1.requestFocus();
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else if(ext.equalsIgnoreCase("docx"))
        {
            try {
                File file = new File(filename);

                FileInputStream fis = new FileInputStream(file.getAbsolutePath());

                XWPFDocument document = new XWPFDocument(fis);

                java.util.List<XWPFParagraph> paragraphs = document.getParagraphs();
                jTextArea1.setText(null);
                for (XWPFParagraph para : paragraphs) {
                    String text = (para.getText());
                    jTextArea1.append(text);
                    jTextArea1.append("\n");

                }

                fis.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }else if(ext.equalsIgnoreCase("doc"))
        {

            try {
                File file = new File(filename);
                FileInputStream fis = new FileInputStream(file.getAbsolutePath());
                HWPFDocument doc = new HWPFDocument(fis);

                WordExtractor we = new WordExtractor(doc);

                String[] paragraphs = we.getParagraphText();

                jTextArea1.setText(null);
                for (String para : paragraphs) {
                    String text2 = (para.toString());
                    jTextArea1.append(text2);
                    jTextArea1.append("\n");
                }
                
                fis.close();
            } catch (Exception e) {
                e.printStackTrace();
            }

        }else if(ext.equalsIgnoreCase("pdf"))
        {
            String str="";
            try {
          File file = new File(filename);
                FileInputStream fis = new FileInputStream(file.getAbsolutePath());
        PdfReader reader = new PdfReader(fis);
        int n = reader.getNumberOfPages();
     for(int i = 1; i<= n; i++) {
      
       str= str+PdfTextExtractor.getTextFromPage(reader, i);//Extracting the content from a particular page.     
    }
  jTextArea1.setText(null);
         jTextArea1.setText(str);
         

        }
        catch (Exception e) {
            System.out.println(e);
        }
       

           

          
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        
       filename = fimage.getAbsolutePath();
       
        name = fimage.getName();
        filename = filename.substring(0,filename.length()-name.length()-1);
        System.out.println("Absolute path of image"+ filename);
        name = name.substring(0, name.length()-4);
        System.out.println("name of image "+ name);
        
       String mess = Steganography.decode(filename, name);
       jTextArea2.setText(null);
       jTextArea2.append(mess);
       if(jCheckBox1.isSelected())
       {
           String s = jTextArea2.getText();
           jTextArea1.setText(null);
           jTextArea1.setText(s);
       }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            // TODO add your handling code here:
                
                       
                   
                   String para= jTextArea1.getText();
                  
                   byte[] input = para.getBytes("UTF-8");
                   
                   byte[] key = k.getBytes("UTF-8");
                   
                   enc = AES.encrypt(input, key);
                   System.out.println(enc);
                   String string = new String(enc, "UTF-8");
                   jTextArea1.setText(null);
                 String encryptedValue = new BASE64Encoder().encode(enc);
                   jTextArea1.append(encryptedValue);
                   
                   if(jCheckBox2.isSelected() == true)
                   {
                       jTextArea2.setText(new String(encryptedValue));
                   }
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(CSMInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
             
            
               
    }//GEN-LAST:event_jButton4ActionPerformed

   
            
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
             String enctext = jTextArea1.getText();
             byte[] decordedValue = new BASE64Decoder().decodeBuffer(enctext);
            
          
             byte[] dec = AES.decrypt(decordedValue, k.getBytes("UTF-8"));
               jTextArea1.setText(null);
                   jTextArea1.append(new String(dec));
        } catch (IOException ex) {
            Logger.getLogger(CSMInterface.class.getName()).log(Level.SEVERE, null, ex);
        } 

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String sb = jTextArea1.getText();
        JFileChooser chooser = new JFileChooser();
    chooser.setCurrentDirectory(new File("/home/me/Documents"));
    int retrival = chooser.showSaveDialog(null);
    
    if (retrival == JFileChooser.APPROVE_OPTION) {
        try {
           StringReader stringReader = new StringReader(sb);
           BufferedReader bufferedReader = new BufferedReader(stringReader);
           if(ext.equalsIgnoreCase("txt"))
           {
           FileWriter fw = new FileWriter(chooser.getSelectedFile()+".txt");
           BufferedWriter bufferedWriter = new BufferedWriter(fw);
         for(String line = bufferedReader.readLine(); line != null; line = bufferedReader.readLine()) {
                        bufferedWriter.write(line);
                        bufferedWriter.newLine();
                    }
                    bufferedReader.close();
                    bufferedWriter.close();
           }else if(ext.equalsIgnoreCase("doc"))
           {
                    FileWriter fw = new FileWriter(chooser.getSelectedFile()+".doc");
           BufferedWriter bufferedWriter = new BufferedWriter(fw);
         for(String line = bufferedReader.readLine(); line != null; line = bufferedReader.readLine()) {
                        bufferedWriter.write(line);
                        bufferedWriter.newLine();
                    }
                    bufferedReader.close();
                    bufferedWriter.close();
               
           }else if(ext.equalsIgnoreCase("docx"))
           {
               XWPFDocument document= new XWPFDocument();
               
               FileOutputStream out = new FileOutputStream(chooser.getSelectedFile()+".docx");
               
               XWPFParagraph paragraph = document.createParagraph();
   XWPFRun run=paragraph.createRun();
   run.setText(null);
   if (sb.contains("\n")) {
                String[] lines = sb.split("\n");
                run.setText(lines[0], 0); // set first line into XWPFRun
                for(int i=1;i<lines.length;i++){
                    // add break and insert new text
                    run.addBreak();
                    run.setText(lines[i]);
                }
            } else {
                run.setText(sb, 0);
            }
   
   
   
   document.write(out);
   out.close();
   System.out.println("createparagraph.docx written successfully");
    
               
           }else if(ext.equalsIgnoreCase("pdf"))
           {
               try {
                  
           
            FileOutputStream pdfFileout = new FileOutputStream(chooser.getSelectedFile()+".pdf");
            Document doc = new Document();
            PdfWriter.getInstance(doc, pdfFileout);
 
            doc.addAuthor("Security System");
            doc.addTitle("This is title");
            doc.open();
            Paragraph para1 = new Paragraph();
              if (sb.contains("\n")) {
                String[] lines = sb.split("\n");
                para1.add(lines[0]);
                
                for(int i=1;i<lines.length;i++){
                    // add break and insert new text
                    para1.add(Chunk.NEWLINE);
                    para1.add(lines[i]);
                }
            } else {
                para1.add("");
            }
            
            
 
            doc.add(para1);
            
 
            doc.close();
            pdfFileout.close();
 
            System.out.println("Success!");
        } catch (Exception e) {
            e.printStackTrace();
        }

           }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
         if(jCheckBox2.isSelected()== true)
        {
            jButton5.setEnabled(true);
            jButton6.setEnabled(true);
            jButton7.setEnabled(true);
            jButton8.setEnabled(true);
            jButton9.setEnabled(true);
            jButton14.setEnabled(true);
        }else
        {
             jButton5.setEnabled(false);
            jButton6.setEnabled(false);
            jButton7.setEnabled(false);
            jButton8.setEnabled(false);
            jButton9.setEnabled(false);
            jButton14.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
         if(jCheckBox3.isSelected()== true)
        {
           
            jButton11.setEnabled(true);
            jButton10.setEnabled(true);
            jButton13.setEnabled(true);
            jButton24.setEnabled(true);
            jButton15.setEnabled(true);
            
        
        }else
        {
           jButton11.setEnabled(false);
            jButton10.setEnabled(false);
            jButton13.setEnabled(false);
            jButton24.setEnabled(false);
            jButton15.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
         fimage = chooser.getSelectedFile();
         filename = fimage.getAbsolutePath();
    BufferedImage image = null;
        try
        {
          image = ImageIO.read(fimage);
        }
        catch (Exception e)
        {
          e.printStackTrace();

        }
        Image bimg = image.getScaledInstance(lab.getWidth(), lab.getHeight(), Image.SCALE_SMOOTH);
       ImageIcon imageicon = new ImageIcon(bimg); 
       
       lab.setIcon(imageicon);
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        
        String text = jTextArea2.getText();
        filename = fimage.getAbsolutePath();
        name = fimage.getName();
        System.out.println("name"+name);
        String ext  = Image_Filter.getExtension(fimage);
        System.out.println(ext);
        filename = filename.substring(0,filename.length()-name.length()-1);
        name = name.substring(0, name.length()-4);
        System.out.println(name);
        
        
					
	if(Steganography.encode(filename,name,ext,text))
        {
             JOptionPane.showMessageDialog(null, "The Image was encoded Successfully!", "Success!", JOptionPane.INFORMATION_MESSAGE);
        } else{
                    JOptionPane.showMessageDialog(null, "Sorry,The image could bot ne encoded","Failue", JOptionPane.INFORMATION_MESSAGE);
                
        }
        
        filename = "C:\\Users\\sayed shazeb\\Downloads\\Documents";
        fimage = new File("C:\\Users\\sayed shazeb\\Downloads\\Documents\\default.png");
        name = "default";
         BufferedImage imagel = null;
        try
        {
          imagel = ImageIO.read(fimage);
        }
        catch (Exception e)
        {
          e.printStackTrace();

        }
        bf=imagel;
        Image bimgl = imagel.getScaledInstance(lab.getWidth(), lab.getHeight(), Image.SCALE_SMOOTH);
       ImageIcon imageiconl = new ImageIcon(bimgl); 
       
       lab.setIcon(imageiconl);
       if(jCheckBox3.isSelected()){
	Lbl_img1_wm.setIcon(imageiconl);
       }
        
	
	
	
        
        
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename = f.getAbsolutePath();
        if(filename.lastIndexOf(".") != -1 && filename.lastIndexOf(".") != 0)
        {
            ext = filename.substring(filename.lastIndexOf(".")+1);
            System.out.println("Extension is " +ext);
        }
        else{
            ext = "";
        }

        if(ext.equalsIgnoreCase("txt"))

        {
            try{
                FileReader reader = new FileReader(filename);
                BufferedReader br = new BufferedReader(reader);
                jTextArea2.read( br, null );
                br.close();
                jTextArea2.requestFocus();
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        }else if(ext.equalsIgnoreCase("docx"))
        {
            try {
                File file = new File(filename);

                FileInputStream fis = new FileInputStream(file.getAbsolutePath());

                XWPFDocument document = new XWPFDocument(fis);

                java.util.List<XWPFParagraph> paragraphs = document.getParagraphs();
                jTextArea2.setText(null);
                for (XWPFParagraph para : paragraphs) {
                    String text = (para.getText());
                    jTextArea2.append(text);
                    jTextArea2.append("\n");

                }

                fis.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }else if(ext.equalsIgnoreCase("doc"))
        {

            try {
                File file = new File(filename);
                FileInputStream fis = new FileInputStream(file.getAbsolutePath());
                HWPFDocument doc = new HWPFDocument(fis);

                WordExtractor we = new WordExtractor(doc);

                String[] paragraphs = we.getParagraphText();

                jTextArea2.setText(null);
                for (String para : paragraphs) {
                    String text2 = (para.toString());
                    jTextArea2.append(text2);
                    jTextArea2.append("\n");
                }
                
                fis.close();
            } catch (Exception e) {
                e.printStackTrace();
            }

        }else if(ext.equalsIgnoreCase("pdf"))
        {
            try {
          File file = new File(filename);
                FileInputStream fis = new FileInputStream(file.getAbsolutePath());
        PdfReader reader = new PdfReader(fis);
        int n = reader.getNumberOfPages();
     
  String str= PdfTextExtractor.getTextFromPage(reader, 2); //Extracting the content from a particular page.
         jTextArea2.setText(null);
         jTextArea2.setText(str);
         

        }
        catch (Exception e) {
            System.out.println(e);
        }
       

           

          
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:

        //String stegan = JOptionPane.showInputDialog(null,"Enter output file name:", "File name",JOptionPane.PLAIN_MESSAGE);
        if(Steganography.save(filename))
        {
            JOptionPane.showMessageDialog(null, "The Image was saved!", "Success!", JOptionPane.INFORMATION_MESSAGE);
        }else
        {
            JOptionPane.showMessageDialog(null, "The Image was not saved", "Failure", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton8ActionPerformed
File file = new File("C:\\Users\\sayed shazeb\\Downloads\\Documents\\default2"+".png");
BufferedImage bf2;
    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
      try {
            Graphics2D g2d = (Graphics2D) bf.getGraphics();
               AlphaComposite alphaChannel = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.3f);
               g2d.setComposite(alphaChannel);

               int topLeftX = (bf.getWidth() - bf1.getWidth()) / 2;
               int topLeftY = (bf.getHeight() - bf1.getHeight()) / 2;

               g2d.drawImage(bf1, topLeftX, topLeftY, null);
               
               ImageIO.write(bf, "png", file);
               g2d.dispose();

               System.out.println("The image watermark is added to the image.");
               bf2 = ImageIO.read(file);

               
               javax.swing.ImageIcon i1 = new javax.swing.ImageIcon(bf2);
               Lbl_img3_wm.setIcon(i1);
               Lbl_img3_wm.updateUI();
        } catch (IOException ex) {
            Logger.getLogger(CSMInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
       
        JFileChooser chooser = new JFileChooser();
 
            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
 
            int res = chooser.showSaveDialog(null);

            File file = chooser.getSelectedFile();         
 


            System.out.println("Absolute Path: "+file.getAbsolutePath()+".png");
            file = new File(file.getAbsolutePath()+".png");

  
     
           
        
           boolean b = Steganography.setImage(bf2,file,"png");
                                    
     
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        try
        {
            System.out.println("hello 123");
            javax.swing.JFileChooser ch=new javax.swing.JFileChooser();
            ch.showOpenDialog(new javax.swing.JFrame());
            f1=ch.getSelectedFile();
            path=f1.getCanonicalPath();
            bf=ImageIO.read(f1);
            Image i2=bf.getScaledInstance(427,155,1);
            javax.swing.ImageIcon i1=new javax.swing.ImageIcon(i2);
            Lbl_img1_wm.setIcon(i1);
            Lbl_img1_wm.updateUI();

        }catch(Exception e){System.out.println(e);}
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        try
        {
            System.out.println("hello 123");
            javax.swing.JFileChooser ch=new javax.swing.JFileChooser();
            ch.showOpenDialog(new javax.swing.JFrame());
            f2=ch.getSelectedFile();
            path=f2.getCanonicalPath();
            bf1=ImageIO.read(f2);
            Image i2=bf1.getScaledInstance(427,155,1);
            javax.swing.ImageIcon i1=new javax.swing.ImageIcon(i2);
            Lbl_img2_wm.setIcon(i1);
            Lbl_img2_wm.updateUI();

        }catch(Exception e){System.out.println(e);}
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        jTextArea1.setText(null);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        jTextArea2.setText(null);
        lab.setIcon(null);
        
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
       Lbl_img1_wm.setIcon(null);
       Lbl_img2_wm.setIcon(null);
       Lbl_img3_wm.setIcon(null);
    }//GEN-LAST:event_jButton15ActionPerformed
 
   
    
 


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CSMInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CSMInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CSMInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CSMInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CSMInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Lbl_img1_wm;
    private javax.swing.JLabel Lbl_img2_wm;
    private javax.swing.JLabel Lbl_img3_wm;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel lab;
    // End of variables declaration//GEN-END:variables
}
